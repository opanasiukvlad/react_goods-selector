{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","goods","goodsFromServer","selectedGood","resetSelectedGood","setState","selectGood","good","this","className","Button","type","onClick","variant","color","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4QAAe,GACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,U,OCEWA,EAAb,4MACEC,MAAe,CACbC,MAAM,YAAKC,GACXC,aAAc,OAHlB,EAMEC,kBAAoB,WAClB,EAAKC,SAAS,CAAEF,aAAc,MAPlC,EAUEG,WAAa,SAACC,GACZ,EAAKF,SAAS,CAAEF,aAAcI,KAXlC,4CAcE,WAA2B,IAAD,OACxB,EAAgCC,KAAKR,MAA7BC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,aAEf,OACE,uBAAMM,UAAU,MAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SACIN,EAEE,iCAAM,sBAAMM,UAAU,uBAAhB,SAAwCN,IAA9C,kBACA,sBAGLA,GAEG,cAACO,EAAA,EAAD,CACEC,KAAK,SACLF,UAAU,aACVG,QAASJ,KAAKJ,kBACdS,QAAQ,WACRC,MAAM,QALR,sBAYN,oBAAIL,UAAU,OAAd,SACGR,EAAMc,KAAI,SAAAR,GAAI,OACb,qBACEE,UAAWO,IAAW,kBAAmB,CACvC,eAAgBb,IAAiBI,IAFrC,UAMGA,EAEAJ,IAAiBI,GAEhB,cAACG,EAAA,EAAD,CACEC,KAAK,SACLF,UAAU,eACVG,QAAS,WACP,EAAKN,WAAW,KAElBO,QAAQ,WACRC,MAAM,YAPR,oBAaAX,IAAiBI,GAEf,cAACG,EAAA,EAAD,CACEC,KAAK,SACLF,UAAU,eACVG,QAAS,WACP,EAAKN,WAAWC,IAElBM,QAAQ,WACRC,MAAM,UAPR,sBArBCP,eA/CnB,GAAyBU,IAAMC,WCT/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b331bc6c.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\nimport Button from '@mui/material/Button';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  goods: string[],\n  selectedGood: string,\n};\n\nexport class App extends React.Component<{}, State > {\n  state: State = {\n    goods: [...goodsFromServer],\n    selectedGood: 'Jam',\n  };\n\n  resetSelectedGood = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  selectGood = (good: string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  render(): React.ReactNode {\n    const { goods, selectedGood } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title\">\n            { selectedGood\n            // eslint-disable-next-line\n              ? <span><span className=\"App__title--selected\">{selectedGood}</span> is selected</span>\n              : 'No goods selected'}\n          </h1>\n\n          {selectedGood\n            && (\n              <Button\n                type=\"button\"\n                className=\"App__clear\"\n                onClick={this.resetSelectedGood}\n                variant=\"outlined\"\n                color=\"error\"\n              >\n                Clear\n              </Button>\n            )}\n        </header>\n\n        <ul className=\"list\">\n          {goods.map(good => (\n            <li\n              className={classNames('Good list__item', {\n                'Good--active': selectedGood === good,\n              })}\n              key={good}\n            >\n              {good}\n\n              {selectedGood === good\n              && (\n                <Button\n                  type=\"button\"\n                  className=\"Good__remove\"\n                  onClick={() => {\n                    this.selectGood('');\n                  }}\n                  variant=\"outlined\"\n                  color=\"secondary\"\n                >\n                  Remove\n                </Button>\n              )}\n\n              { selectedGood !== good\n                && (\n                  <Button\n                    type=\"button\"\n                    className=\"Good__select\"\n                    onClick={() => {\n                      this.selectGood(good);\n                    }}\n                    variant=\"outlined\"\n                    color=\"success\"\n                  >\n                    Select\n                  </Button>\n                )}\n            </li>\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}