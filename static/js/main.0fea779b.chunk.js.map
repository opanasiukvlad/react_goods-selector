{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","goods","goodsFromServer","selectedGood","resetSelectedGood","setState","selectGood","good","this","className","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAAe,G,MAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCCWA,EAAb,4MACEC,MAAe,CACbC,MAAM,YAAKC,GACXC,aAAc,OAHlB,EAMEC,kBAAoB,WAClB,EAAKC,SAAS,CAAEF,aAAc,MAPlC,EAUEG,WAAa,SAACC,GACZ,EAAKF,SAAS,CAAEF,aAAcI,KAXlC,4CAcE,WAA2B,IAAD,OACxB,EAAgCC,KAAKR,MAA7BC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,aAEf,OACE,uBAAMM,UAAU,MAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SACIN,EAAY,UACPA,EADO,gBAEV,sBAGLA,GAEG,wBACEO,KAAK,SACLD,UAAU,aACVE,QAASH,KAAKJ,kBAHhB,sBAUN,6BACGH,EAAMW,KAAI,SAAAL,GAAI,OACb,qBACEE,UAAWI,IAAW,OAAQ,CAC5B,eAAgBV,IAAiBI,IAFrC,UAMGA,EAEAJ,IAAiBI,GAEhB,wBACEG,KAAK,SACLD,UAAU,eACVE,QAAS,WACP,EAAKL,WAAW,KAJpB,oBAWAH,IAAiBI,GAEf,wBACEG,KAAK,SACLD,UAAU,eACVE,QAAS,WACP,EAAKL,WAAWC,IAJpB,sBAnBCA,eA5CnB,GAAyBO,IAAMC,WCR/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0fea779b.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  goods: string[],\n  selectedGood: string,\n};\n\nexport class App extends React.Component<{}, State > {\n  state: State = {\n    goods: [...goodsFromServer],\n    selectedGood: 'Jam',\n  };\n\n  resetSelectedGood = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  selectGood = (good: string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  render(): React.ReactNode {\n    const { goods, selectedGood } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title\">\n            { selectedGood\n              ? `${selectedGood} is selected`\n              : 'No goods selected'}\n          </h1>\n\n          {selectedGood\n            && (\n              <button\n                type=\"button\"\n                className=\"App__clear\"\n                onClick={this.resetSelectedGood}\n              >\n                Clear\n              </button>\n            )}\n        </header>\n\n        <ul>\n          {goods.map(good => (\n            <li\n              className={classNames('Good', {\n                'Good--active': selectedGood === good,\n              })}\n              key={good}\n            >\n              {good}\n\n              {selectedGood === good\n              && (\n                <button\n                  type=\"button\"\n                  className=\"Good__remove\"\n                  onClick={() => {\n                    this.selectGood('');\n                  }}\n                >\n                  Remove\n                </button>\n              )}\n\n              { selectedGood !== good\n                && (\n                  <button\n                    type=\"button\"\n                    className=\"Good__select\"\n                    onClick={() => {\n                      this.selectGood(good);\n                    }}\n                  >\n                    Select\n                  </button>\n                )}\n            </li>\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}